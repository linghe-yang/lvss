use std::fmt::Write;

// pub const ZETAS_256: [i32; 256] = [
//     0, 25847, -2608894, -518909, 237124, -777960, -876248, 466468, 1826347, 2353451, -359251,
//     -2091905, 3119733, -2884855, 3111497, 2680103, 2725464, 1024112, -1079900, 3585928, -549488,
//     -1119584, 2619752, -2108549, -2118186, -3859737, -1399561, -3277672, 1757237, -19422, 4010497,
//     280005, 2706023, 95776, 3077325, 3530437, -1661693, -3592148, -2537516, 3915439, -3861115,
//     -3043716, 3574422, -2867647, 3539968, -300467, 2348700, -539299, -1699267, -1643818, 3505694,
//     -3821735, 3507263, -2140649, -1600420, 3699596, 811944, 531354, 954230, 3881043, 3900724,
//     -2556880, 2071892, -2797779, -3930395, -1528703, -3677745, -3041255, -1452451, 3475950,
//     2176455, -1585221, -1257611, 1939314, -4083598, -1000202, -3190144, -3157330, -3632928, 126922,
//     3412210, -983419, 2147896, 2715295, -2967645, -3693493, -411027, -2477047, -671102, -1228525,
//     -22981, -1308169, -381987, 1349076, 1852771, -1430430, -3343383, 264944, 508951, 3097992,
//     44288, -1100098, 904516, 3958618, -3724342, -8578, 1653064, -3249728, 2389356, -210977, 759969,
//     -1316856, 189548, -3553272, 3159746, -1851402, -2409325, -177440, 1315589, 1341330, 1285669,
//     -1584928, -812732, -1439742, -3019102, -3881060, -3628969, 3839961, 2091667, 3407706, 2316500,
//     3817976, -3342478, 2244091, -2446433, -3562462, 266997, 2434439, -1235728, 3513181, -3520352,
//     -3759364, -1197226, -3193378, 900702, 1859098, 909542, 819034, 495491, -1613174, -43260,
//     -522500, -655327, -3122442, 2031748, 3207046, -3556995, -525098, -768622, -3595838, 342297,
//     286988, -2437823, 4108315, 3437287, -3342277, 1735879, 203044, 2842341, 2691481, -2590150,
//     1265009, 4055324, 1247620, 2486353, 1595974, -3767016, 1250494, 2635921, -3548272, -2994039,
//     1869119, 1903435, -1050970, -1333058, 1237275, -3318210, -1430225, -451100, 1312455, 3306115,
//     -1962642, -1279661, 1917081, -2546312, -1374803, 1500165, 777191, 2235880, 3406031, -542412,
//     -2831860, -1671176, -1846953, -2584293, -3724270, 594136, -3776993, -2013608, 2432395, 2454455,
//     -164721, 1957272, 3369112, 185531, -1207385, -3183426, 162844, 1616392, 3014001, 810149,
//     1652634, -3694233, -1799107, -3038916, 3523897, 3866901, 269760, 2213111, -975884, 1717735,
//     472078, -426683, 1723600, -1803090, 1910376, -1667432, -1104333, -260646, -3833893, -2939036,
//     -2235985, -420899, -2286327, 183443, -976891, 1612842, -3545687, -554416, 3919660, -48306,
//     -1362209, 3937738, 1400424, -846154, 1976782,
// ];

// pub const ZETAS_256: [i64; 256] = [
//     0, -3752071, 3573723, -3248036, 3311737, 2859201, 2621667, 3885095, 3799006, -1298052, -981949,
//     -58561, -4103281, -633523, -95319, -3998990, 3514439, -717294, 1931004, 2993727, 307747,
//     2190479, 1814252, -1039416, 2138271, 510719, 352731, 3807022, -824586, -2555401, 3391053,
//     1938086, -3299257, -383801, 3155574, 1081528, -390587, -141846, -436141, -2032610, 3953073,
//     4146648, 3664061, 2368426, -2476010, 160090, 2627782, -891848, -950344, 811348, 409366,
//     2604214, 1841669, 1256072, -2899842, -317428, 1596625, 1752400, 273069, 415579, -291102,
//     -2783699, -424480, 1327894, -1279714, -1504691, -993475, 395016, 3571007, 2767163, 1348474,
//     -2906936, -2174881, 2166026, -1365351, 2594609, -992236, -729105, -3809887, 2282469, 626132,
//     -116638, 3762510, -3594713, -3996893, 1236486, -2152071, 2553887, 285662, 1489796, -2738452,
//     1019700, 1347765, -1086763, -2075594, 2869299, -1206879, 2439703, 1085211, -2398193, -521875,
//     -3405193, -1888293, -2338378, 3824724, 2782405, -1199975, 3379342, -2528948, 2391659, 3903595,
//     -778705, 431481, -3296789, 1006424, 2791197, 2203581, 1055452, 428619, -3703303, 2155720,
//     2333238, 3959994, 3021415, 166330, 3713710, -2193436, 4045738, -794312, 1246882, -3815497,
//     -3503965, -2154020, 689987, 3313735, -2707486, -2773997, 3988268, -3371112, -2092429, -2653807,
//     4029642, 514133, 4179559, 1205072, -353832, -638456, 1862389, 3133803, 1678701, -4174704,
//     -3545759, 2342664, -1414212, -1813415, 2897634, -4067534, 3905142, 2800256, 3395873, -1109791,
//     -2369793, 646002, 1944342, 2495183, 2756472, -1937226, -1488105, -867890, 3252405, 3699511,
//     3544363, 610476, 4084009, -2727504, 3728435, 1749951, -2377846, -3097264, -2140123, 1985212,
//     -2155455, 3490093, -3343762, -175653, -3655839, 1006188, -586292, 903631, -2421653, 1743673,
//     -1957744, 2613114, 2108032, 1565061, -3111563, -196228, -1424704, 597328, -565272, 523342,
//     714677, 3338959, -2216854, 3737028, 4082736, 460438, 3709248, -225231, -3336406, 291851,
//     541695, -524817, -2968045, -1392813, 1821233, -2059534, -3077716, 1472585, 2505279, -645549,
//     -2740880, -1415304, 1630947, -3793803, 2786689, 20224, 2937005, -1381422, -2446425, 87086,
//     -1152721, 407572, 153271, -71508, -968293, -5251, 2369727, -3798654, 938106, 2148663, 3216613,
//     -4006715, -1195187, -494744, -1864801, -2868423, 2933016, -590907, 522718, 2884206, 116951,
//     -1738105, -1450379, 1518095, 2345932,
// ];

// pub const ZETAS_256: [i64; 256] = [
//     0, 197826133, -115767094, 111792563, 82065825, 38240899, 143508241, -216238668, -81099803,
//     110386650, 127050366, -27021036, -69850152, -68645182, -164621106, -159233159, -212415328,
//     40880822, 110419454, -93034825, 267821284, 50712234, 222423295, 73003723, 240013878, -30838112,
//     -190237045, 189556751, -129442975, -222823879, -200538055, 21024260, -89533644, 194369388,
//     -120051481, -165928432, -131381513, 149983490, 62089951, -91684268, 44444471, -188785625,
//     -240684000, 77169635, 128468950, 235692519, -125308137, -214316830, -225474754, 45368012,
//     -5770368, 108580728, 100892851, 179530218, -20130779, -27217974, -259595155, -61511713,
//     265277971, -82720595, 108018001, -243168826, 230349730, 96018817, -22145312, -76897706,
//     104991799, 231848556, -116095466, -101687321, 147033146, -224088146, -218924228, -100351828,
//     -215449967, -215653146, 138874802, -143081043, -11222566, 160553701, 140263140, 109523727,
//     -145471514, 104134919, -111815852, -178451867, 150789788, -145593923, -43549228, -52338916,
//     32472686, -104985566, 80491829, -228595437, 141960244, -123625348, -251406842, 93012779,
//     168993380, 232931205, -52945172, 21552324, 72920209, -195061351, 146603414, -60883975,
//     -262979111, 70179393, 38735365, -138114548, 198454089, 97418827, 119328694, -74309388,
//     -221505310, -89265879, 247659397, -256136578, -80883745, 226475637, -167563254, -121957726,
//     -37657826, -188308786, 19514490, 128657023, 29488221, -46015764, 41100171, -248748223,
//     -230433249, -169248525, 165417824, -114873550, -176343241, 43149905, 2529321, -149530084,
//     -50940749, 148793691, 188767390, -130826490, 263892794, 230131952, 19955547, 172494608,
//     -247593981, 232737013, 243076329, -91753222, 13162719, -254481534, -142920286, 23643767,
//     227164862, -151563343, 173246678, -245723002, 112932918, 71584453, -76828825, -84391547,
//     55650111, 255253119, 173185801, 41558239, -250941482, -123675316, 265691126, 78527535,
//     101046604, -121440433, -150123747, -184594850, -188915960, -91998671, 10137024, -209504579,
//     11297095, -25789152, 254174828, 66785910, -38538612, 27135086, -8628283, -234049293, 145412588,
//     27721499, -137997383, 264385561, 263839807, -199469048, -51592029, -195292816, 134124482,
//     186605640, 245881453, -208372410, 118562931, 193049693, 224094664, 174558769, -176119778,
//     -114495974, -226265642, 34723134, 155053620, -9945530, -99750208, 65668931, 183533419,
//     -134730614, 225562830, 9628838, 246344160, -4576876, -240432952, -240326794, -51248266,
//     207311118, -127736327, 105387387, -167281714, 10052540, 226595686, 101143996, -189176139,
//     -187422223, 96710778, 142296495, 121945317, 150933518, 169005679, -151100307, 130483448,
//     118101088, -78481715, -255758864, 165353445, -59336919, -104549629, 84630243, 198602149,
//     260433103, 194556713, -74439196, 177403152, -36792389, -93866534, 255032100, -4830523,
//     182162697, 167328795, -73074502, -266156007, -210948637,
// ];


//Q_PRIME: i64 = 34359724033;
pub const ZETAS_256: [i64; 256] = [0, -7871570796, -7994509528, -16498280149, -2717173655, -15174979206, 7857792025, -10874478222, -2202458784, 4195809386, -16006623694, -8542438069, -10824100696, -12015181304, 4180393386, -3975722725, -16282990660, 17123712674, -1626993535, -3747198558, -16788174609, -7830223808, -5653549034, 5771098626, -8435033792, -12384022040, -15266809011, -1563402664, -14317419577, -7670157301, -12078841311, 12470719863, 16511932379, -432068452, 12542879118, 9205328076, -2202657728, 6522579898, 4133962196, 7973358115, -432592092, 7861640039, 149293269, -14667274078, -3503045382, 164536628, 3528890255, -12787974778, 2237679379, 790181306, -10098103953, -8212163713, -4385028409, -11845449050, 8323757472, 15011586906, 9227060282, -292299387, 9410999032, 6706376973, -14202930424, 15935193216, 8617684618, 3098096874, -14328544371, -766505321, -8421667817, -15271154415, 10155912932, -11745278515, 8975367748, -12648418316, 12680514140, -14661072648, 1828651200, -6851398377, -6007316951, 9188456950, -13073267610, 16167255200, 14692999748, 13439375139, 687281503, -10463359379, 2177993155, -9018828160, 10219028754, -2503690433, 9295038500, 2285503053, 8718411259, -15548236914, 4391066342, 1743174479, 15017763981, 6867354045, -9979556951, 1263173884, 13184680443, -6019142628, 3824035492, -445763007, -793940499, -7845007490, 15561504199, 4470852834, 13762408385, 14391226158, 165772975, 2232776677, 13516945550, -7087899118, -5805486726, 11200939238, -838877488, 9246659372, -1297687669, -13692970374, 8256360062, 13494376611, 3640281765, -4211536660, 12008364551, -10636083573, -11240482546, 16649690326, -9422266984, -3610928642, 7154674412, 7830128083, 1325347873, 14040349285, 1008758315, -4836239278, 12739915028, -14049525486, 898958171, -4799959565, -15020315891, -6672165875, 12375959502, 16804649802, 15491010471, -2642809607, 4282094200, -896627897, 1477716530, -10348975066, 12073315956, -1322292335, 1388801270, 6332144557, -10912738970, 14712695162, 95260142, -5262618927, -16521694787, 15824442310, 8585747302, 3674600323, -7512311237, -15248875877, -4761187871, -5204999577, -7199208372, 4097441581, -8250015820, 7371276097, 15968977444, 5168253721, -8979253066, 14262539785, 16710658976, -1338503774, 5454551049, -16369629874, -5810449038, 7543216727, 13801222919, 4781410551, 1749284624, 4480974975, 6838999715, 3148873200, -1560626393, -13044491362, -12208096752, 2589456085, 12609307618, -17179778725, 16748774149, 10752292988, -9240879792, 5258947088, -15616723276, 2522438238, 11153380402, -6915078401, -14290196819, -6727453489, -2424649371, -12770255509, -12425277642, -6876563262, 8665013614, -10265412973, 5334250569, 15172740287, -6248831527, 17151631797, 3059042163, 10027015646, 882308507, 9314174187, 1259309738, -6295285494, 9605494429, -2694611008, -9430371579, -16193467342, 14332126392, -4979775215, 6358525261, 918692494, 7905555240, -15209445896, 9842607288, -3294219169, 4340582641, 137205488, 4722548082, -5901014385, 10091559593, -298540368, -8099066068, -13491065012, 15785203220, -2483504292, -13031303435, -11955621978, -1467650742, -3639655178, -280440209, -2264645207, 3411619195, -9928359498, 9053340482, -1074514972, -13893524875, -1912271054, 10220701278, 14577395335, 2863518262, -7976288096, -5420539131, -14301307391];


// Modular exponentiation: base^exp mod modulus

fn mod_pow(mut base: i128, mut exp: i128, modulus: i128) -> i128 {
    let mut result = 1i128;
    base %= modulus;
    if base < 0 {
        base += modulus;
    }
    while exp > 0 {
        if exp % 2 == 1 {
            result = (result * base) % modulus;
        }
        base = (base * base) % modulus;
        exp /= 2;
    }
    result
}

// Bit reversal for index k with num_bits
fn bitrev(mut k: usize, num_bits: u32) -> usize {
    let mut rev = 0usize;
    for _ in 0..num_bits {
        rev = (rev << 1) | (k & 1);
        k >>= 1;
    }
    rev
}

// Find a primitive 2N-th root of unity mod q
fn find_primitive_2n_th_root(q: i128, n: usize) -> Option<i128> {
    let order = (2 * n) as i128; // 2N
    let mut divisors = vec![];
    let mut temp = order;
    while temp > 1 {
        temp /= 2;
        divisors.push(temp);
    }
    for zeta in 2..q {
        if mod_pow(zeta, order, q) != 1 {
            continue;
        }
        let mut is_primitive = true;
        for &div in &divisors {
            if mod_pow(zeta, div, q) == 1 {
                is_primitive = false;
                break;
            }
        }
        if is_primitive {
            return Some(zeta);
        }
    }
    None
}

// Compute and print ZETAS array for given prime q and power-of-2 N
pub fn compute_and_print_zetas(q: i64, n: usize) {
    // Check if N is a power of 2
    if n == 0 || (n & (n - 1)) != 0 {
        println!("Error: N ({}) must be a power of 2.", n);
        return;
    }

    let q_i128 = q as i128;
    // Check if 2N divides q-1
    let order = (2 * n) as i128;
    if (q_i128 - 1) % order != 0 {
        println!(
            "Error: 2N ({}) does not divide q-1 ({}). No 2N-th roots of unity exist.",
            order,
            q_i128 - 1
        );
        return;
    }

    // Find primitive 2N-th root
    let zeta = match find_primitive_2n_th_root(q_i128, n) {
        Some(z) => z,
        None => {
            println!(
                "Error: Could not find a primitive 2N-th root of unity for N={}.",
                n
            );
            return;
        }
    };

    // Compute number of bits for bit reversal
    let num_bits = (n as f64).log2() as u32;

    // Initialize ZETAS array
    let mut zetas = vec![0i64; n];
    let r = 1i128 << 64; // Montgomery factor R = 2^32

    // Compute ZETAS: zeta^(bitrev(i)) * R mod q
    for k in 1..n {
        let exponent = bitrev(k, num_bits) as i128;
        let base = mod_pow(zeta, exponent, q_i128);
        let mont = (base * r) % q_i128;
        let signed = if mont > (q_i128 - 1) / 2 {
            mont - q_i128
        } else {
            mont
        };
        zetas[k] = signed as i64;
    }

    // Print in array format
    let mut output = String::new();
    output.push('[');
    for (i, &val) in zetas.iter().enumerate() {
        if i > 0 {
            output.push_str(", ");
        }
        write!(&mut output, "{}", val).unwrap();
    }
    output.push(']');
    println!("{}", output);
}

#[test]
fn test() {
    // For original Q
    // let original_q = (1 << 23) - (1 << 13) + 1; // 8380417
    // compute_and_print_zetas(original_q);

    // For new Q=1048573, will print error
    compute_and_print_zetas(34359724033, 256);
}
